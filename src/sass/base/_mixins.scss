// convert px size to rem
$html-font-size: 16px;

@function stripUnit($value) {
  @return $value / ($value * 0 + 1);
}

@function rem($pxValue) {
  @return #{stripUnit($pxValue) / stripUnit($html-font-size)}rem;
}

// return opacity rgba
@function bg-opacity($color, $opacity) {
  @return #{rgba($color, $opacity)};
}

/* Legacy */

@mixin transform($property) {
  -webkit-transform: $property;
  -moz-transform: $property;
  -ms-transform: $property;
  -o-transform: $property;
  transform: $property;
}
@mixin transform-origin($property) {
  -webkit-transform-origin: $property;
  -moz-transform-origin: $property;
  -ms-transform-origin: $property;
  -o-transform-origin: $property;
  transform-origin: $property;
}

@mixin transition($property) {
  -webkit-transition: $property;
  -moz-transition: $property;
  -o-transition: $property;
  transition: $property;
}

@mixin transition-delay($property) {
  -webkit-transition-delay: $property;
  -moz-transition-delay: $property;
  -o-transition-delay: $property;
  transition-delay: $property;
}

@mixin box-shadow($property) {
  -webkit-box-shadow: $property;
  -moz-box-shadow: $property;
  box-shadow: $property;
}

@mixin box-sizing($property) {
  -webkit-box-sizing: $property;
  -moz-box-sizing: $property;
  box-sizing: $property;
}

@mixin object-fit($property) {
  -o-object-fit: $property;
  object-fit: $property;
}

@mixin object-position($property) {
  -o-object-position: $property;
  object-position: $property;
}

@mixin animation($property) {
  -webkit-animation: $property;
  -moz-animation: $property;
  -o-animation: $property;
  animation: $property;
}

@mixin clip-path($property) {
  -webkit-clip-path: $property;
  clip-path: $property;
}

@mixin appearance($property) {
  -webkit-appearance: $property;
  -moz-appearance: $property;
  appearance: $property;
}
